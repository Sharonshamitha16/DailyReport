CSS - W3SCHOOLS
--> CSS SELECTORS
 A)Simple selectors - name, #id, .class

 B)Combinator selectors - specific relationship between them
	types of combinator selectors
		i) descendant selector --> selects all the elements that are descendants to the specific element.
			eg. div p {
				      background-colour: yellow;
				  }
                          (highlights the div's p written chars)

		ii)child selector --> selects all the elements which are children of specific element.
			 eg. div > p {
					background-colour: yellow;
				     }
                       (highlights  only the div's p written chars)

		iii) adjacent sibiling selector --> select an element that is directly after another specific element or selects the elements that are placed immediately after the child elements.
 			 eg. div + p {
					background-colour: yellow;
				     }
                        (highlights  after the div's p written chars only the 1st sibiling)

		iv) general sibiling selector -->  selects all elements that are next siblings of a specified element.
			eg. div ~ p {
 					background-colour: yellow;
				     }
                         (highlights  after the div's p written chars all the sibilings)
 C)Pseudo-class selectors - certain state :STATE

 syntax: selector:pseudo-class div: hover {
 					 property: value;
					 color: blue;
				          }
 1)The :first-child Pseudo-class --> higlights the first child of the parent ie., div-parent p- firstchild 
		eg. p:first-child {
 			 color: blue;
 				  }
	2) The first <i> element in all <p> elements --> highlights  all the i tag of parent p tag.
		eg. p i:first-child {
			 color: blue;
 				  }
	3)<i> elements in all first child <p> elements --> higlights  only the first child of p having i tag.
               eg. p: first-child i {
			 color: blue 
                                     }
 	4) The :lang Pseudo-class  --> represents by quotation.
		eg. q:lang(no) {
 			 quotes: "~" "~";
				}
 where q denotes quotes , lang denotes attribute , no denotes cls

so many  pseudo-classes available :


 D)Pseudo-elements selectors -::ELEMENT
 syntax : selector::pseudo-element {
                           property: value;
                                          }
 1)The ::first-line Pseudo-element:- it highlights the first line
 	
 2)The ::first-letter Pseudo-element:- it highlights the first letter
 
 3)The ::after Pseudo-element,The ::before Pseudo-element :- prints after and before.
 
 4) The ::selection Pseudo-element:- makes difference while selecting.

 E*Attribute selectors  attribute value =[attribute], => specific attribute highlighted or called.
					[attribute="value"], => attribute's specific value is called or highlighted.
					[attribute~="value"]=>attribute containing the specific value will be called or highlighted.
					[attribute|="value"]=> attribute having the exact specific value or continued with a hypen will be highlighted or called.
					[attribute^="value"]=> attribute which starts with specific value will be called or highlighted.
					[attribute$="value"]=>attribute which ends with the specific value will be called or highlighted.
					[attribute*="value"]=>attribute which contains the half of the specific valuewill be called or highlighted.

--> CSS types
A) INTERNAL CSS=> <style> </style>
B) EXTERNAL CSS=> <link rel ="stylesheet" href ="style.css">
C)INLINE CSS=> <style = " color = red; text-align=center;">


--> CSS comments
A)  Single line =>/* THIS IS A COMMENT */
B) multi line => /* this
		  is a 
		  comment*/
C) another form of comment <!-- This a comment line -->


-->CSS colors
A)  bg color -> background-color:"
B)  bordercolor -> border-color:
C) textcolor -> color:

RGB=> rgb(255,99, 71) , (255,9971,0) 255-red, 99-green ,71-blue , 0-alpha (transparency)
hex=> #ff6347 rr-ff, gg-63 , bb-47
hsl=>(0,100%,100%) h-hue 0-360 degree , s-saturation 0% complete gray; 100% no gray shade, l-lightness 0% no black 50% neither light nor black 100% lightness


--> CSS backgrounds
background-col
background-image :url("p.gif");
background-repeat => background-repeat: repeat-x; (horizontal) background-repeat: repeat-y; (vertical) 
background-attachment: fixed, scroll 
background-position => right top , left top , etcc..
background shorthand=> background: #ffffff url("img_tree.png") no-repeat right top; (everything at a time assigning)

--> CSS borders
*dotted
*dashed
*solid 
*double 
*groove 
*ridge 
*inset
*outset 
*none
*hidden 

A) border-width: medium,thick,etc...
B) border-color:
C)border-sides :=>
  border-top-style: dotted;
  border-right-style : solid;
  border-bottom-style : dotted;
  border-left-style : solid;
